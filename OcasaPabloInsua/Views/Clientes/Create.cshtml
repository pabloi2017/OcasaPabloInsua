@model OcasaPabloInsua.Models.Cliente

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css"
          rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC"
          crossorigin="anonymous">
</head>
<body>
    <div class="container my-4">

        @using (Html.BeginForm(null, null, FormMethod.Post, new { onsubmit = "return submitCreate(this)"}))
        {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Cliente</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdCliente, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="my-1">
                <input id="SubmitBTN" type="submit" value="Guardar" class="btn btn-success" />
                @Html.ActionLink("Volver", "Index", "Clientes", new { @class = "btn btn-outline-primary" })
            </div>

            @if (!(ViewBag.error == null))
            {
                <div id="alertamsg" class="alert alert-danger" role="alert">
                    @ViewBag.error
                </div>
            }

        </div>
        }

    </div>

    <script type="text/javascript">
        function submitCreate(frm) {
            var IdCliente = document.getElementById("IdCliente");
                let valueOfIdCliente = IdCliente.value;
                if (valueOfIdCliente < 10 || valueOfIdCliente > 100) {
                    alert('El rango de valores para el Id debe estar entre 10 y 100');
                    return false;
            }
            return true;
        }     
    </script>
</body>
</html>
